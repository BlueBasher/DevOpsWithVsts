{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ida_ClientId": {
            "type": "string",
            "metadata": {
                "description": "The clientId of the Azure Active Directory application backing this website"
            }
        },
        "ida_ClientSecret": {
            "type": "string",
            "metadata": {
                "description": "The clientSecret of the Azure Active Directory application backing this website"
            }
        },
        "ida_Domain": {
            "type": "string",
            "metadata": {
                "description": "The domain of the Azure Active Directory instance backing this website"
            }
        },
        "ida_TenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenantId of the Azure Active Directory instance backing this website"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        }
    },
    "resources": [
        {
            "comments": "Storage Account for [toLower(resourceGroup().name)]",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[toLower(resourceGroup().name)]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {},
            "resources": [],
            "dependsOn": []
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[toLower(resourceGroup().name)]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
            },
            "properties": {
                "name": "[toLower(resourceGroup().name)]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[toLower(resourceGroup().name)]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "Website"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]"
            ],
            "properties": {
                "name": "[toLower(resourceGroup().name)]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', toLower(resourceGroup().name))]",
                "siteConfig": {
                    "phpVersion": "off",
                    "netFrameworkVersion": "v4.6"
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', toLower(resourceGroup().name))]",
                        "[resourceId('Microsoft.Web/sites/', toLower(resourceGroup().name))]"
                    ],
                    "properties": {
                        "ida:AADInstance": "https://login.microsoftonline.com/",
                        "StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',toLower(resourceGroup().name),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', toLower(resourceGroup().name)), '2015-05-01-preview').key1,';')]",
                        "ida:PostLogoutRedirectUri": "[concat('https://', toLower(resourceGroup().name), '.azurewebsites.net')]",
                        "ida:ClientId": "[parameters('ida_ClientId')]",
                        "ida:ClientSecret": "[parameters('ida_ClientSecret')]",
                        "ida:Domain": "[parameters('ida_Domain')]",
                        "ida:TenantId": "[parameters('ida_TenantId')]",
                        "appInsight:InstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', toLower(resourceGroup().name)), '2014-04-01').InstrumentationKey]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat(toLower(resourceGroup().name), '-', resourceGroup().name)]",
            "type": "Microsoft.Insights/autoscalesettings",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "AutoScaleSettings"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 2,
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80.0
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60.0
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[concat(toLower(resourceGroup().name), '-', resourceGroup().name)]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('ServerErrors ', toLower(resourceGroup().name))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', toLower(resourceGroup().name))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "ServerErrorsAlertRule"
            },
            "properties": {
                "name": "[concat('ServerErrors ', toLower(resourceGroup().name))]",
                "description": "[concat(toLower(resourceGroup().name), ' has some server errors, status code 5xx.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', toLower(resourceGroup().name))]",
                        "metricName": "Http5xx"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0.0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('ForbiddenRequests ', toLower(resourceGroup().name))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', toLower(resourceGroup().name))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "ForbiddenRequestsAlertRule"
            },
            "properties": {
                "name": "[concat('ForbiddenRequests ', toLower(resourceGroup().name))]",
                "description": "[concat(toLower(resourceGroup().name), ' has some requests that are forbidden, status code 403.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', toLower(resourceGroup().name))]",
                        "metricName": "Http403"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('CPUHigh ', toLower(resourceGroup().name))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "CPUHighAlertRule"
            },
            "properties": {
                "name": "[concat('CPUHigh ', toLower(resourceGroup().name))]",
                "description": "[concat('The average CPU is high across all the instances of ', toLower(resourceGroup().name))]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]",
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('LongHttpQueue ', toLower(resourceGroup().name))]",
            "type": "Microsoft.Insights/alertrules",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "LongHttpQueueAlertRule"
            },
            "properties": {
                "name": "[concat('LongHttpQueue ', toLower(resourceGroup().name))]",
                "description": "[concat('The HTTP queue for the instances of ', toLower(resourceGroup().name), ' has a large number of pending requests.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', toLower(resourceGroup().name))]",
                        "metricName": "HttpQueueLength"
                    },
                    "operator": "GreaterThan",
                    "threshold": 100.0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[toLower(resourceGroup().name)]",
            "type": "Microsoft.Insights/components",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', toLower(resourceGroup().name))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', toLower(resourceGroup().name))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[toLower(resourceGroup().name)]"
            }
        }
    ]
}